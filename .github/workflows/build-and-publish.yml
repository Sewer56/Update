name: Build and Publish

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env: 
  TOOLS_PATH: ./Publish/Tools
  PUBLISH_CHANGELOG_PATH: ./Publish/Changelog.md 
  PUBLISH_PACKAGES_PATH: ./Publish/Packages
  PUBLISH_PATH: ./Publish
  IS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/') }}
  RELEASE_TAG: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Print Environment Variables
      run: |
        echo "Changelog Path: $env:PUBLISH_CHANGELOG_PATH"
        echo "Publish Path: $env:PUBLISH_PATH"
        echo "Is Release?: $env:IS_RELEASE"
        echo "Release Tag: $env:RELEASE_TAG"
    
    - name: Setup .NET Core SDK (3.1.x)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 3.1.x

    - name: Setup .NET Core SDK (5.0.x)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 5.0.x
    
    - name: Setup .NET Core SDK (6.0.x)
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '14'
        
    - name: Setup AutoChangelog
      run: npm install -g auto-changelog
      
    - name: Get Dotnet Info
      run: dotnet --info
    - name: Restore dependencies
      run: dotnet restore ./Sewer56.Update/Sewer56.Update.sln
    - name: Build
      run: dotnet build -c Release ./Sewer56.Update/Sewer56.Update.sln --no-restore
    - name: Test
      run: dotnet test -c Release ./Sewer56.Update/Sewer56.Update.sln --no-build --verbosity normal
      
    - name: Publish Update Tool
      run: |
        [System.IO.Directory]::CreateDirectory("$env:TOOLS_PATH")
        dotnet publish ./Sewer56.Update/Sewer56.Update.Tool/Sewer56.Update.Tool.csproj -c Release -o "./Temp/Update.Tool"
        [IO.Compression.ZipFile]::CreateFromDirectory("./Temp/Update.Tool", "$env:TOOLS_PATH/" + "Sewer56.Update.Tool.zip")
     
    - name: Create NuGet Package Artifacts
      run: |
        [System.IO.Directory]::CreateDirectory("$env:PUBLISH_PACKAGES_PATH")
        $items = Get-ChildItem -Path "." -Recurse | Where-Object { $_.Name -match "Sewer56.*.nupkg" }
        foreach ($item in $items)
        {
          Write-Host "Moving $item -> $env:PUBLISH_PACKAGES_PATH"
          Move-Item -Path "$item" -Destination "$env:PUBLISH_PACKAGES_PATH"
        }
      
    - name: Create Changelog (on Tag)
      run: |
        [System.IO.Directory]::CreateDirectory("$env:PUBLISH_PATH")
        if ($env:IS_RELEASE -eq 'true') 
        {
            auto-changelog --sort-commits date --hide-credit --template keepachangelog --commit-limit false --unreleased --starting-version "$env:RELEASE_TAG" --output "$env:PUBLISH_CHANGELOG_PATH"
        }
        else 
        {
            auto-changelog --sort-commits date --hide-credit --template keepachangelog --commit-limit false --unreleased --output "$env:PUBLISH_CHANGELOG_PATH"
        }
         
    - name: Upload NuGet Artifacts
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: NuGet Packages
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ env.PUBLISH_PACKAGES_PATH }}/*
        retention-days: 0
        
    - name: Upload Changelog Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: Changelog
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ env.PUBLISH_CHANGELOG_PATH }}
        retention-days: 0
    
    - name: Upload Tools Artifact
      uses: actions/upload-artifact@v4
      with:
        # Artifact name
        name: Tools
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ env.TOOLS_PATH }}
        retention-days: 0
    
    - name: Upload to GitHub Releases
      uses: softprops/action-gh-release@v2
      if: env.IS_RELEASE == 'true'
      with:
        # Path to load note-worthy description of changes in release from
        body_path: ${{ env.PUBLISH_CHANGELOG_PATH }}
        # Newline-delimited list of path globs for asset files to upload
        files: |
          ${{ env.PUBLISH_PATH }}/**
        
    - name: Upload to NuGet (on Tag)
      env: 
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
      if: env.IS_RELEASE == 'true'
      run: |
        $items = Get-ChildItem -Path "$env:PUBLISH_PACKAGES_PATH/*.nupkg"
        Foreach ($item in $items)
        {
            Write-Host "Pushing $item"
            dotnet nuget push "$item" -k "$env:NUGET_KEY" -s "https://api.nuget.org/v3/index.json" --skip-duplicate
        }
